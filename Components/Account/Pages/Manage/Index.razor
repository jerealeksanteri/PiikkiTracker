@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using PiikkiTracker.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Profile</PageTitle>

<div class="card shadow border-0 mt-4">
    <StatusMessage />
    <div class="card-header bg-black bg-gradient m-lg-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Profile</h2>
            </div>
        </div>
    </div>
    <div class="row p-4">
        <div class="col-xl-6">
            <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-floating mb-3">
                    <InputText type="text" @bind-Value="Input.FirstName" id="firstName" class="form-control" placeholder="Enter your first name" />
                    <label for="firstName" class="form-label">First Name</label>
                </div>
                <div class="form-floating mb-3">
                    <InputText type="text" @bind-Value="Input.LastName" id="lastName" class="form-control" placeholder="Enter your last name" />
                    <label for="lastName" class="form-label">First Name</label>
                </div>
                <div class="form-floating mb-3">
                    <input type="text" value="@username" id="username" class="form-control" placeholder="Choose your username" disabled />
                    <label for="username" class="form-label">Username</label>
                </div>
                <div class="form-floating mb-3">
                    <InputText type="text" @bind-Value="Input.TelegramNickname" id="telegramNickname" class="form-control" placeholder="Enter your Telegram Nickname" />
                    <label for="telegramNickname" class="form-label">Telegram Nickname</label>
                </div>
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.PhoneNumber" id="Input.PhoneNumber" class="form-control" placeholder="Enter your phone number" />
                    <label for="Input.PhoneNumber" class="form-label">Phone number</label>
                    <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
                </div>
                <button type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
            </EditForm>
        </div>
    </div>

</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;
    private string? firstName;
    private string? lastName;
    private string? telegramNickname;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);
        firstName = user.FirstName;
        lastName = user.LastName;
        telegramNickname = user.TelegramNickname;

        Input.PhoneNumber ??= phoneNumber;
        Input.FirstName ??= firstName;
        Input.LastName ??= lastName;
        Input.TelegramNickname ??= telegramNickname;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);

            
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
            }
        }

        user.FirstName = Input.FirstName;
        user.LastName = Input.LastName;
        user.TelegramNickname = Input.TelegramNickname;
        var editResult = await UserManager.UpdateAsync(user);

        if (!editResult.Succeeded)
        {
            RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to update profile.", HttpContext);
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone Number")]
        public string? PhoneNumber { get; set; }

        [Display(Name = "First Name")]
        public string? FirstName { get; set; }

        [Display(Name = "Last Name")]
        public string? LastName { get; set; }

        [Display(Name = "Telegram Nickname (without @)")]
        public string? TelegramNickname { get; set; }

    }
}
