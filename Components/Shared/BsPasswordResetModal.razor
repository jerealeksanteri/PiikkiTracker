@using PiikkiTracker.Utility

<!-- Password Reset Modal -->
<div class="modal fade" id="passwordResetModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="passwordResetModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="passwordResetModalLabel">Reset Password</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Reset password for: <strong>@UserName</strong></p>

                <div class="mb-3">
                    <label for="newPassword" class="form-label">New Password:</label>
                    <div class="input-group">
                        <input type="@(ShowPassword ? "text" : "password")" class="form-control" id="newPassword" @bind="NewPassword" />
                        <button class="btn btn-outline-secondary" type="button" @onclick="TogglePasswordVisibility">
                            <i class="bi @(ShowPassword ? "bi-eye-slash" : "bi-eye")"></i>
                        </button>
                        <button class="btn btn-outline-primary" type="button" @onclick="CopyPassword" title="Copy to clipboard">
                            <i class="bi bi-clipboard"></i>
                        </button>
                    </div>
                </div>

                <div class="mb-3">
                    <button type="button" class="btn btn-info btn-sm" @onclick="GenerateNewPassword">
                        <i class="bi bi-arrow-clockwise"></i> Generate New Password
                    </button>
                </div>

                <div class="alert alert-info">
                    <small>
                        <i class="bi bi-info-circle"></i>
                        The password must be at least 6 characters long and contain uppercase, lowercase, numbers, and special characters.
                    </small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="() => ResetConfirmationClicked(false)">Cancel</button>
                <button type="button" class="btn btn-primary" @onclick="() => ResetConfirmationClicked(true)" disabled="@(string.IsNullOrWhiteSpace(NewPassword))">
                    <i class="bi bi-key"></i> Reset Password
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public EventCallback<string> OnPasswordReset { get; set; }
    [Parameter] public string UserName { get; set; } = "";

    public string NewPassword { get; set; } = "";
    public bool ShowPassword { get; set; } = false;

    protected override void OnInitialized()
    {
        GenerateNewPassword();
    }

    private void GenerateNewPassword()
    {
        NewPassword = PasswordGenerator.GenerateStrongPassword(12);
        StateHasChanged();
    }

    private void TogglePasswordVisibility()
    {
        ShowPassword = !ShowPassword;
    }

    private async Task CopyPassword()
    {
        if (!string.IsNullOrWhiteSpace(NewPassword))
        {
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", NewPassword);
        }
    }

    private async Task ResetConfirmationClicked(bool confirmed)
    {
        if (confirmed && !string.IsNullOrWhiteSpace(NewPassword))
        {
            await OnPasswordReset.InvokeAsync(NewPassword);
        }
        else if (!confirmed)
        {
            // Reset to a new password for next time
            GenerateNewPassword();
        }
    }

    [Inject] public IJSRuntime JSRuntime { get; set; } = default!;
}